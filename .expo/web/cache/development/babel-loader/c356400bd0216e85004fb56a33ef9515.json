{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from \"expo-status-bar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport Navbar from \"./src/components/Navbar/Navbar\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport MarketplaceScreen from \"./src/screens/Marketplace/MarketplaceSreen\";\nimport Login from \"./src/screens/Authentication/LoginScreen\";\nimport SignUp from \"./src/screens/Authentication/Signup\";\nimport { useEffect, useState } from \"react\";\nimport { Auth } from \"./src/components/Auth\";\nimport Event from \"./src/screens/Event/EventScreen\";\nimport Card from \"./src/components/Card/Card\";\nimport MyCardList from \"./src/components/CardList/CardList\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nexport default function App() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isSignedIn = _useState2[0],\n    setIsSignedIn = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isReady = _useState4[0],\n    setIsReady = _useState4[1];\n  useEffect(function () {\n    var checkLogin = function () {\n      var _ref = _asyncToGenerator(function* () {\n        var user = yield Auth.get();\n        setIsSignedIn(user != null);\n        setIsReady(true);\n      });\n      return function checkLogin() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    if (!isReady) checkLogin();\n  }, [isReady]);\n  if (!isReady) {\n    return null;\n  }\n  return _jsx(NavigationContainer, {\n    children: isSignedIn ? _jsx(_Fragment, {\n      children: _jsxs(Stack.Navigator, {\n        screenOptions: {\n          headerShown: false\n        },\n        children: [_jsx(Stack.Screen, {\n          name: \"Navbar\",\n          component: Navbar\n        }), _jsx(Stack.Screen, {\n          name: \"Event\",\n          component: Event\n        }), _jsx(Stack.Screen, {\n          name: \"Login\",\n          component: Login\n        }), _jsx(Stack.Screen, {\n          name: \"SignUp\",\n          component: SignUp\n        })]\n      })\n    }) : _jsx(_Fragment, {\n      children: _jsxs(Stack.Navigator, {\n        screenOptions: {\n          headerShown: false\n        },\n        children: [_jsx(Stack.Screen, {\n          name: \"SignIn\",\n          component: Login\n        }), _jsx(Stack.Screen, {\n          name: \"SignUp\",\n          component: SignUp\n        }), _jsx(Stack.Screen, {\n          name: \"Navbar\",\n          component: Navbar\n        }), _jsx(Stack.Screen, {\n          name: \"Event\",\n          component: Event\n        })]\n      })\n    })\n  });\n}","map":{"version":3,"names":["StatusBar","NavigationContainer","Navbar","createNativeStackNavigator","MarketplaceScreen","Login","SignUp","useEffect","useState","Auth","Event","Card","MyCardList","Stack","App","isSignedIn","setIsSignedIn","isReady","setIsReady","checkLogin","user","get","headerShown"],"sources":["C:/Users/asus/Documents/GitHub/mobile/App.js"],"sourcesContent":["import { StatusBar } from \"expo-status-bar\";\r\nimport { StyleSheet, Text, View } from \"react-native\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport Navbar from \"./src/components/Navbar/Navbar\";\r\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\nimport MarketplaceScreen from \"./src/screens/Marketplace/MarketplaceSreen\";\r\nimport Login from \"./src/screens/Authentication/LoginScreen\";\r\nimport SignUp from \"./src/screens/Authentication/Signup\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Auth } from \"./src/components/Auth\";\r\nimport Event from \"./src/screens/Event/EventScreen\";\r\nimport Card from \"./src/components/Card/Card\";\r\nimport MyCardList from \"./src/components/CardList/CardList\";\r\nconst Stack = createNativeStackNavigator();\r\n\r\nexport default function App() {\r\n  const [isSignedIn, setIsSignedIn] = useState(false);\r\n  const [isReady, setIsReady] = useState(false);\r\n\r\n  useEffect(()=>{\r\n    const checkLogin = async ()=>{\r\n      const user = await Auth.get();   \r\n      setIsSignedIn( user != null)\r\n      setIsReady(true);\r\n    }\r\n    if(!isReady)\r\n      checkLogin();\r\n  }, [isReady])\r\n\r\n\r\n  if (!isReady) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <NavigationContainer>\r\n      {isSignedIn ? (\r\n        <>\r\n          <Stack.Navigator screenOptions={{\r\n            headerShown: false\r\n          }}>\r\n            \r\n            <Stack.Screen name=\"Navbar\" component={Navbar} />\r\n            <Stack.Screen name=\"Event\" component={Event}/>\r\n            <Stack.Screen name=\"Login\" component={Login} />\r\n            <Stack.Screen name=\"SignUp\" component={SignUp} />\r\n\r\n            \r\n\r\n\r\n          </Stack.Navigator>\r\n\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Stack.Navigator screenOptions={{\r\n            headerShown: false\r\n          }}>\r\n            \r\n            <Stack.Screen name=\"SignIn\" component={Login} />\r\n            <Stack.Screen name=\"SignUp\" component={SignUp} />\r\n            <Stack.Screen name=\"Navbar\" component={Navbar}/>\r\n            <Stack.Screen name=\"Event\" component={Event}/>\r\n\r\n\r\n          </Stack.Navigator>\r\n        </>\r\n      )}\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\n// const styles = StyleSheet.create({\r\n//   container: {\r\n//     flex: 1,\r\n//     backgroundColor: '#fff',\r\n//     alignItems: 'center',\r\n//     justifyContent: 'center',\r\n//   },\r\n// });\r\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAAC;AAAA;AAAA;AAE5C,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,OAAOC,MAAM;AACb,SAASC,0BAA0B,QAAQ,gCAAgC;AAC3E,OAAOC,iBAAiB;AACxB,OAAOC,KAAK;AACZ,OAAOC,MAAM;AACb,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,IAAI;AACb,OAAOC,KAAK;AACZ,OAAOC,IAAI;AACX,OAAOC,UAAU;AAA2C;AAAA;AAAA;AAC5D,IAAMC,KAAK,GAAGV,0BAA0B,EAAE;AAE1C,eAAe,SAASW,GAAG,GAAG;EAC5B,gBAAoCN,QAAQ,CAAC,KAAK,CAAC;IAAA;IAA5CO,UAAU;IAAEC,aAAa;EAChC,iBAA8BR,QAAQ,CAAC,KAAK,CAAC;IAAA;IAAtCS,OAAO;IAAEC,UAAU;EAE1BX,SAAS,CAAC,YAAI;IACZ,IAAMY,UAAU;MAAA,6BAAG,aAAU;QAC3B,IAAMC,IAAI,SAASX,IAAI,CAACY,GAAG,EAAE;QAC7BL,aAAa,CAAEI,IAAI,IAAI,IAAI,CAAC;QAC5BF,UAAU,CAAC,IAAI,CAAC;MAClB,CAAC;MAAA,gBAJKC,UAAU;QAAA;MAAA;IAAA,GAIf;IACD,IAAG,CAACF,OAAO,EACTE,UAAU,EAAE;EAChB,CAAC,EAAE,CAACF,OAAO,CAAC,CAAC;EAGb,IAAI,CAACA,OAAO,EAAE;IACZ,OAAO,IAAI;EACb;EAEA,OACE,KAAC,mBAAmB;IAAA,UACjBF,UAAU,GACT;MAAA,UACE,MAAC,KAAK,CAAC,SAAS;QAAC,aAAa,EAAE;UAC9BO,WAAW,EAAE;QACf,CAAE;QAAA,WAEA,KAAC,KAAK,CAAC,MAAM;UAAC,IAAI,EAAC,QAAQ;UAAC,SAAS,EAAEpB;QAAO,EAAG,EACjD,KAAC,KAAK,CAAC,MAAM;UAAC,IAAI,EAAC,OAAO;UAAC,SAAS,EAAEQ;QAAM,EAAE,EAC9C,KAAC,KAAK,CAAC,MAAM;UAAC,IAAI,EAAC,OAAO;UAAC,SAAS,EAAEL;QAAM,EAAG,EAC/C,KAAC,KAAK,CAAC,MAAM;UAAC,IAAI,EAAC,QAAQ;UAAC,SAAS,EAAEC;QAAO,EAAG;MAAA;IAKjC,EAEjB,GAEH;MAAA,UACE,MAAC,KAAK,CAAC,SAAS;QAAC,aAAa,EAAE;UAC9BgB,WAAW,EAAE;QACf,CAAE;QAAA,WAEA,KAAC,KAAK,CAAC,MAAM;UAAC,IAAI,EAAC,QAAQ;UAAC,SAAS,EAAEjB;QAAM,EAAG,EAChD,KAAC,KAAK,CAAC,MAAM;UAAC,IAAI,EAAC,QAAQ;UAAC,SAAS,EAAEC;QAAO,EAAG,EACjD,KAAC,KAAK,CAAC,MAAM;UAAC,IAAI,EAAC,QAAQ;UAAC,SAAS,EAAEJ;QAAO,EAAE,EAChD,KAAC,KAAK,CAAC,MAAM;UAAC,IAAI,EAAC,OAAO;UAAC,SAAS,EAAEQ;QAAM,EAAE;MAAA;IAG9B;EAErB,EACmB;AAE1B"},"metadata":{},"sourceType":"module"}