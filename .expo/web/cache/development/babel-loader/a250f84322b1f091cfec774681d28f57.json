{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Auth } from \"../../components/Auth\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar wait = function wait(timeout) {\n  return new Promise(function (resolve) {\n    return setTimeout(resolve, timeout);\n  });\n};\nvar MyTicketScreen = function MyTicketScreen() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    myEvents = _useState2[0],\n    setMyEvents = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isReady = _useState4[0],\n    setIsReady = _useState4[1];\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    refreshing = _React$useState2[0],\n    setRefreshing = _React$useState2[1];\n  var wait = function wait(timeout) {\n    return new Promise(function (resolve) {\n      return setTimeout(resolve, timeout);\n    });\n  };\n  useEffect(function () {\n    var getMyEvents = function () {\n      var _ref = _asyncToGenerator(function* () {\n        var user = JSON.parse(yield Auth.get());\n        var onRefresh = React.useCallback(function () {\n          setRefreshing(true);\n          wait(1000).then(function () {\n            return setRefreshing(false);\n          });\n        }, []);\n        fetch(\"https://evemark.samikammoun.me/api/user/get-info/\" + user.id, {\n          method: \"GET\",\n          credentials: \"include\"\n        }).then(function (response) {\n          return response.json();\n        }).then(function () {\n          var _ref2 = _asyncToGenerator(function* (responseJson) {\n            console.log(responseJson.my_events);\n            setMyEvents(responseJson.my_events);\n            setIsReady(true);\n          });\n          return function (_x) {\n            return _ref2.apply(this, arguments);\n          };\n        }()).catch(function (error) {\n          console.error(error);\n        });\n      });\n      return function getMyEvents() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    if (!isReady) getMyEvents();\n  }, [isReady]);\n  if (!isReady) {\n    return null;\n  }\n  return _jsx(SafeAreaView, {\n    children: _jsx(ScrollView, {\n      refreshControl: _jsx(RefreshControl, {\n        refreshing: refreshing,\n        onRefresh: onRefresh\n      })\n    })\n  });\n};\nexport default MyTicketScreen;","map":{"version":3,"names":["React","useEffect","useState","Auth","wait","timeout","Promise","resolve","setTimeout","MyTicketScreen","myEvents","setMyEvents","isReady","setIsReady","refreshing","setRefreshing","getMyEvents","user","JSON","parse","get","onRefresh","useCallback","then","fetch","id","method","credentials","response","json","responseJson","console","log","my_events","catch","error"],"sources":["C:/Users/asus/Documents/GitHub/mobile/src/screens/MyTicket/MyTicketScreen.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Text, SafeAreaView, RefreshControl} from \"react-native\";\r\nimport { ScrollView } from \"react-native-web\";\r\n\r\nimport { Auth } from \"../../components/Auth\";\r\n\r\n\r\nconst wait = (timeout) => {\r\n  return new Promise(resolve => setTimeout(resolve, timeout));\r\n}\r\nconst MyTicketScreen = () => {\r\n  const [myEvents, setMyEvents] = useState([]);\r\n  const [isReady, setIsReady] = useState(false);\r\n  const [refreshing, setRefreshing] = React.useState(false);\r\n  const wait = (timeout) => {\r\n    return new Promise(resolve => setTimeout(resolve, timeout));\r\n  }\r\n  useEffect(() => {\r\n    const getMyEvents = async () => {\r\n      const user = JSON.parse(await Auth.get());\r\n\r\n      const onRefresh = React.useCallback(() => {\r\n        setRefreshing(true);\r\n        wait(1000).then(() => setRefreshing(false));\r\n      }, []);\r\n\r\n      fetch(\"https://evemark.samikammoun.me/api/user/get-info/\" + user.id, {\r\n        method: \"GET\",\r\n        credentials: \"include\",\r\n      })\r\n        .then((response) => response.json())\r\n        .then(async (responseJson) => {\r\n          //Hide Loader\r\n          console.log(responseJson.my_events);\r\n          setMyEvents(responseJson.my_events);\r\n          setIsReady(true);\r\n        })\r\n        .catch((error) => {\r\n          //Hide Loader\r\n          console.error(error);\r\n        });\r\n    };\r\n    if (!isReady) getMyEvents();\r\n  }, [isReady]);\r\n\r\n  if (!isReady) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <SafeAreaView>\r\n      <ScrollView refreshControl={\r\n          <RefreshControl\r\n            refreshing={refreshing}\r\n            onRefresh={onRefresh}\r\n          />\r\n        } >\r\n\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nexport default MyTicketScreen;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAAA;AAAA;AAInD,SAASC,IAAI;AAAgC;AAG7C,IAAMC,IAAI,GAAG,SAAPA,IAAI,CAAIC,OAAO,EAAK;EACxB,OAAO,IAAIC,OAAO,CAAC,UAAAC,OAAO;IAAA,OAAIC,UAAU,CAACD,OAAO,EAAEF,OAAO,CAAC;EAAA,EAAC;AAC7D,CAAC;AACD,IAAMI,cAAc,GAAG,SAAjBA,cAAc,GAAS;EAC3B,gBAAgCP,QAAQ,CAAC,EAAE,CAAC;IAAA;IAArCQ,QAAQ;IAAEC,WAAW;EAC5B,iBAA8BT,QAAQ,CAAC,KAAK,CAAC;IAAA;IAAtCU,OAAO;IAAEC,UAAU;EAC1B,sBAAoCb,KAAK,CAACE,QAAQ,CAAC,KAAK,CAAC;IAAA;IAAlDY,UAAU;IAAEC,aAAa;EAChC,IAAMX,IAAI,GAAG,SAAPA,IAAI,CAAIC,OAAO,EAAK;IACxB,OAAO,IAAIC,OAAO,CAAC,UAAAC,OAAO;MAAA,OAAIC,UAAU,CAACD,OAAO,EAAEF,OAAO,CAAC;IAAA,EAAC;EAC7D,CAAC;EACDJ,SAAS,CAAC,YAAM;IACd,IAAMe,WAAW;MAAA,6BAAG,aAAY;QAC9B,IAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,OAAOhB,IAAI,CAACiB,GAAG,EAAE,CAAC;QAEzC,IAAMC,SAAS,GAAGrB,KAAK,CAACsB,WAAW,CAAC,YAAM;UACxCP,aAAa,CAAC,IAAI,CAAC;UACnBX,IAAI,CAAC,IAAI,CAAC,CAACmB,IAAI,CAAC;YAAA,OAAMR,aAAa,CAAC,KAAK,CAAC;UAAA,EAAC;QAC7C,CAAC,EAAE,EAAE,CAAC;QAENS,KAAK,CAAC,mDAAmD,GAAGP,IAAI,CAACQ,EAAE,EAAE;UACnEC,MAAM,EAAE,KAAK;UACbC,WAAW,EAAE;QACf,CAAC,CAAC,CACCJ,IAAI,CAAC,UAACK,QAAQ;UAAA,OAAKA,QAAQ,CAACC,IAAI,EAAE;QAAA,EAAC,CACnCN,IAAI;UAAA,8BAAC,WAAOO,YAAY,EAAK;YAE5BC,OAAO,CAACC,GAAG,CAACF,YAAY,CAACG,SAAS,CAAC;YACnCtB,WAAW,CAACmB,YAAY,CAACG,SAAS,CAAC;YACnCpB,UAAU,CAAC,IAAI,CAAC;UAClB,CAAC;UAAA;YAAA;UAAA;QAAA,IAAC,CACDqB,KAAK,CAAC,UAACC,KAAK,EAAK;UAEhBJ,OAAO,CAACI,KAAK,CAACA,KAAK,CAAC;QACtB,CAAC,CAAC;MACN,CAAC;MAAA,gBAvBKnB,WAAW;QAAA;MAAA;IAAA,GAuBhB;IACD,IAAI,CAACJ,OAAO,EAAEI,WAAW,EAAE;EAC7B,CAAC,EAAE,CAACJ,OAAO,CAAC,CAAC;EAEb,IAAI,CAACA,OAAO,EAAE;IACZ,OAAO,IAAI;EACb;EAEA,OACE,KAAC,YAAY;IAAA,UACX,KAAC,UAAU;MAAC,cAAc,EACtB,KAAC,cAAc;QACb,UAAU,EAAEE,UAAW;QACvB,SAAS,EAAEO;MAAU;IAExB;EAEU,EACA;AAEnB,CAAC;AAED,eAAeZ,cAAc"},"metadata":{},"sourceType":"module"}