{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Header from \"../../components/Header/Header\";\nimport SearchBar from \"../../components/SearchBar/SearchBar\";\nimport MyCardList from \"../../components/CardList/CardList\";\nimport { Auth } from \"../../components/Auth\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar wait = function wait(timeout) {\n  return new Promise(function (resolve) {\n    return setTimeout(resolve, timeout);\n  });\n};\nvar MyEventsScreen = function MyEventsScreen() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    createdEvents = _useState2[0],\n    setCreatedEvents = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isReady = _useState4[0],\n    setIsReady = _useState4[1];\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    refreshing = _React$useState2[0],\n    setRefreshing = _React$useState2[1];\n  var onRefresh = React.useCallback(function () {\n    setRefreshing(true);\n    wait(1000).then(function () {\n      return setRefreshing(false);\n    });\n  }, []);\n  useEffect(function () {\n    var getCreatedEvents = function () {\n      var _ref = _asyncToGenerator(function* () {\n        var user = JSON.parse(yield Auth.get());\n        fetch(\"https://evemark.samikammoun.me/api/user/get-info/\" + user.id, {\n          method: \"GET\",\n          credentials: \"include\"\n        }).then(function (response) {\n          return response.json();\n        }).then(function () {\n          var _ref2 = _asyncToGenerator(function* (responseJson) {\n            console.log(responseJson.created_events);\n            setCreatedEvents(responseJson.created_events);\n            setIsReady(true);\n          });\n          return function (_x) {\n            return _ref2.apply(this, arguments);\n          };\n        }()).catch(function (error) {\n          console.error(error);\n        });\n      });\n      return function getCreatedEvents() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    if (!isReady) getCreatedEvents();\n  }, [isReady]);\n  if (!isReady) {\n    return null;\n  }\n  return _jsxs(View, {\n    children: [_jsx(Header, {}), _jsxs(View, {\n      children: [_jsx(SearchBar, {}), _jsx(ScrollView, {\n        refreshControl: _jsx(RefreshControl, {\n          refreshing: refreshing,\n          onRefresh: onRefresh\n        })\n      })]\n    })]\n  });\n};\nexport default MyEventsScreen;","map":{"version":3,"names":["React","useEffect","useState","Header","SearchBar","MyCardList","Auth","wait","timeout","Promise","resolve","setTimeout","MyEventsScreen","createdEvents","setCreatedEvents","isReady","setIsReady","refreshing","setRefreshing","onRefresh","useCallback","then","getCreatedEvents","user","JSON","parse","get","fetch","id","method","credentials","response","json","responseJson","console","log","created_events","catch","error"],"sources":["C:/Users/asus/Documents/GitHub/mobile/src/screens/MyEvents/MyEventsScreen.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { View, RefreshControl, ScrollView } from \"react-native\";\r\nimport Header from \"../../components/Header/Header\";\r\nimport SearchBar from \"../../components/SearchBar/SearchBar\";\r\nimport MyCardList from \"../../components/CardList/CardList\";\r\nimport { Auth } from \"../../components/Auth\";\r\n\r\nconst wait = (timeout) => {\r\n  return new Promise((resolve) => setTimeout(resolve, timeout));\r\n};\r\nconst MyEventsScreen = () => {\r\n  const [createdEvents, setCreatedEvents] = useState([]);\r\n  const [isReady, setIsReady] = useState(false);\r\n  const [refreshing, setRefreshing] = React.useState(false);\r\n\r\n  const onRefresh = React.useCallback(() => {\r\n    setRefreshing(true);\r\n    wait(1000).then(() => setRefreshing(false));\r\n  }, []);\r\n  useEffect(() => {\r\n    const getCreatedEvents = async () => {\r\n      const user = JSON.parse(await Auth.get());\r\n\r\n      fetch(\"https://evemark.samikammoun.me/api/user/get-info/\" + user.id, {\r\n        method: \"GET\",\r\n        credentials: \"include\",\r\n      })\r\n        .then((response) => response.json())\r\n        .then(async (responseJson) => {\r\n          //Hide Loader\r\n          console.log(responseJson.created_events);\r\n          setCreatedEvents(responseJson.created_events);\r\n          setIsReady(true);\r\n        })\r\n        .catch((error) => {\r\n          //Hide Loader\r\n          console.error(error);\r\n        });\r\n    };\r\n    if (!isReady) getCreatedEvents();\r\n  }, [isReady]);\r\n\r\n  if (!isReady) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <View>\r\n      <Header />\r\n      <View>\r\n        <SearchBar />\r\n        <ScrollView\r\n          refreshControl={\r\n            <RefreshControl refreshing={refreshing} onRefresh={onRefresh} />\r\n          }\r\n        ></ScrollView>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default MyEventsScreen;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAAA;AAEnD,OAAOC,MAAM;AACb,OAAOC,SAAS;AAChB,OAAOC,UAAU;AACjB,SAASC,IAAI;AAAgC;AAAA;AAE7C,IAAMC,IAAI,GAAG,SAAPA,IAAI,CAAIC,OAAO,EAAK;EACxB,OAAO,IAAIC,OAAO,CAAC,UAACC,OAAO;IAAA,OAAKC,UAAU,CAACD,OAAO,EAAEF,OAAO,CAAC;EAAA,EAAC;AAC/D,CAAC;AACD,IAAMI,cAAc,GAAG,SAAjBA,cAAc,GAAS;EAC3B,gBAA0CV,QAAQ,CAAC,EAAE,CAAC;IAAA;IAA/CW,aAAa;IAAEC,gBAAgB;EACtC,iBAA8BZ,QAAQ,CAAC,KAAK,CAAC;IAAA;IAAtCa,OAAO;IAAEC,UAAU;EAC1B,sBAAoChB,KAAK,CAACE,QAAQ,CAAC,KAAK,CAAC;IAAA;IAAlDe,UAAU;IAAEC,aAAa;EAEhC,IAAMC,SAAS,GAAGnB,KAAK,CAACoB,WAAW,CAAC,YAAM;IACxCF,aAAa,CAAC,IAAI,CAAC;IACnBX,IAAI,CAAC,IAAI,CAAC,CAACc,IAAI,CAAC;MAAA,OAAMH,aAAa,CAAC,KAAK,CAAC;IAAA,EAAC;EAC7C,CAAC,EAAE,EAAE,CAAC;EACNjB,SAAS,CAAC,YAAM;IACd,IAAMqB,gBAAgB;MAAA,6BAAG,aAAY;QACnC,IAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,OAAOnB,IAAI,CAACoB,GAAG,EAAE,CAAC;QAEzCC,KAAK,CAAC,mDAAmD,GAAGJ,IAAI,CAACK,EAAE,EAAE;UACnEC,MAAM,EAAE,KAAK;UACbC,WAAW,EAAE;QACf,CAAC,CAAC,CACCT,IAAI,CAAC,UAACU,QAAQ;UAAA,OAAKA,QAAQ,CAACC,IAAI,EAAE;QAAA,EAAC,CACnCX,IAAI;UAAA,8BAAC,WAAOY,YAAY,EAAK;YAE5BC,OAAO,CAACC,GAAG,CAACF,YAAY,CAACG,cAAc,CAAC;YACxCtB,gBAAgB,CAACmB,YAAY,CAACG,cAAc,CAAC;YAC7CpB,UAAU,CAAC,IAAI,CAAC;UAClB,CAAC;UAAA;YAAA;UAAA;QAAA,IAAC,CACDqB,KAAK,CAAC,UAACC,KAAK,EAAK;UAEhBJ,OAAO,CAACI,KAAK,CAACA,KAAK,CAAC;QACtB,CAAC,CAAC;MACN,CAAC;MAAA,gBAlBKhB,gBAAgB;QAAA;MAAA;IAAA,GAkBrB;IACD,IAAI,CAACP,OAAO,EAAEO,gBAAgB,EAAE;EAClC,CAAC,EAAE,CAACP,OAAO,CAAC,CAAC;EAEb,IAAI,CAACA,OAAO,EAAE;IACZ,OAAO,IAAI;EACb;EAEA,OACE,MAAC,IAAI;IAAA,WACH,KAAC,MAAM,KAAG,EACV,MAAC,IAAI;MAAA,WACH,KAAC,SAAS,KAAG,EACb,KAAC,UAAU;QACT,cAAc,EACZ,KAAC,cAAc;UAAC,UAAU,EAAEE,UAAW;UAAC,SAAS,EAAEE;QAAU;MAC9D,EACW;IAAA,EACT;EAAA,EACF;AAEX,CAAC;AAED,eAAeP,cAAc"},"metadata":{},"sourceType":"module"}